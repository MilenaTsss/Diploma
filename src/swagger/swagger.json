{
  "openapi": "3.0.0",
  "info": {
    "title": "Платформа для удаленного управления системой контроля доступа шлагбаумов.",
    "description": "Спецификация API для системы контроля доступа шлагбаумов.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost/api",
      "description": "Local development server"
    },
    {
      "url": "https://localhost/api",
      "description": "Local docker prod server"
    },
    {
      "url": "http://46.8.225.185/api",
      "description": "Virtual dev docker server"
    },
    {
      "url": "https://gsm-barrier.ru/api",
      "description": "Production API"
    }
  ],
  "externalDocs": {
    "description": "Диаграмма базы данных",
    "url": "https://dbdiagram.io/d/Diploma-DB-673e9c25e9daa85aca2ed394"
  },
  "paths": {
    "/auth/codes/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Отправка кода подтверждения в SMS.",
        "description": "Отправляет одноразовый код подтверждения на указанный номер телефона.\n\nКод будет действовать в течение 30 минут.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона в формате `+7XXXXXXXXXX`.",
                    "example": "+79991234567"
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "login",
                      "change_phone_old",
                      "change_phone_new",
                      "change_password",
                      "reset_password",
                      "delete_account"
                    ],
                    "description": "Определяет цель отправки SMS-кода.",
                    "example": "login"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Код успешно отправлен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification code sent."
                    },
                    "verification_token": {
                      "type": "string",
                      "description": "Токен верификации, который нужно передавать при подтверждении кода.",
                      "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "mode": [
                        "Invalid mode. Valid modes are: ['login', 'change_phone_old', 'change_phone_new', 'reset_password', 'change_password', 'delete_account']"
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "mode": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "change phone": {
                    "value": {
                      "detail": "This new phone number already exists."
                    }
                  },
                  "change password": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "delete account": {
                    "value": {
                      "detail": "Superuser account cannot be deleted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не найден.",
            "content": {
              "application/json": {
                "examples": {
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Превышен лимит. Попробуйте позже.",
            "content": {
              "application/json": {
                "examples": {
                  "too many attempts": {
                    "value": {
                      "detail": "Too many verification attempts. Try again later."
                    }
                  },
                  "too many unverified codes": {
                    "value": {
                      "detail": "Too many unverified codes. Try again later."
                    }
                  },
                  "verification code already sent": {
                    "value": {
                      "detail": "Verification code was already sent. Try again later."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/auth/codes/verify/": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Подтверждение кода из SMS.",
        "description": "Проверяет код подтверждения, отправленный на номер телефона.\n\nЕсли код верный, обновляет его статус на `verified`.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона в формате `+7XXXXXXXXXX`.",
                    "example": "+79991234567"
                  },
                  "code": {
                    "type": "string",
                    "pattern": "^\\d{6}$",
                    "description": "Код подтверждения из SMS.",
                    "example": "123456"
                  },
                  "verification_token": {
                    "type": "string",
                    "description": "Токен верификации, полученный при отправке кода.",
                    "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Код успешно подтвержден.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Code verified successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "verification_token": [
                        "Enter a valid 32-character verification token (letters and digits only)."
                      ],
                      "code": [
                        "Enter a valid 6-digit verification code."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "verification_token": [
                        "This field is required."
                      ],
                      "code": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ],
                      "verification_token": [
                        "This field may not be blank."
                      ],
                      "code": [
                        "This field may not be blank."
                      ]
                    }
                  },
                  "wrong phone number": {
                    "value": {
                      "detail": "Phone number does not match the verification record."
                    }
                  },
                  "wrong code": {
                    "value": {
                      "detail": "Invalid code."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Подтверждение не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "verification not found": {
                    "value": {
                      "detail": "Verification not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Код уже был использован.",
            "content": {
              "application/json": {
                "examples": {
                  "code been used": {
                    "value": {
                      "detail": "This code has already been used. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Код истёк. Запросите новый.",
            "content": {
              "application/json": {
                "examples": {
                  "expired": {
                    "value": {
                      "detail": "This code has expired. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Превышен лимит. Попробуйте позже.",
            "content": {
              "application/json": {
                "examples": {
                  "too many attempts": {
                    "value": {
                      "detail": "Too many verification attempts. Try again later."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/auth/login/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Авторизация по SMS-коду.",
        "description": "Авторизации пользователя после отправки кода подтверждения.\n\nПараметры включают номер телефона и код, полученный на телефон. \n\nВ ответ возвращается токен авторизации, который будет сохранен на стороне клиента.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона в формате `+7XXXXXXXXXX`.",
                    "example": "+79991234567"
                  },
                  "verification_token": {
                    "type": "string",
                    "description": "Токен подтверждения, полученный после верификации кода.",
                    "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешная авторизация",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "`JWT` токен для авторизации. Передается в заголовке `Authorization`.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQxODYxMDc3LCJpYXQiOjE3NDE4NTkyNzcsImp0aSI6IjFjYjIyZjk0OTMwNjRiNzQ4OWIzZmNiZTRiYzk4ZmJkIiwidXNlcl9pZCI6M30.430ZgG-LAM7Me57l5WtRtRPeYLm8MicrMvqPc3t8i6s"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "`JWT` токен обновления, который позволяет получить новый `access_token` после его истечения.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0MjExODQ3NywiaWF0IjoxNzQxODU5Mjc3LCJqdGkiOiJjMTcwNmE5ZTc3MDA0ZTBiYWQ0MTI4OGQ5MjIyNTNjMSIsInVzZXJfaWQiOjN9.2zYybd7SZCqeWEGZNN-jfbpShfecPxNNBiuNdYjf2tE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "verification_token": [
                        "Enter a valid 32-character verification token (letters and digits only)."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "verification_token": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ],
                      "verification_token": [
                        "This field may not be blank."
                      ]
                    }
                  },
                  "wrong phone number": {
                    "value": {
                      "detail": "Phone number does not match the verification record."
                    }
                  },
                  "wrong mode": {
                    "value": {
                      "detail": "Invalid verification mode."
                    }
                  },
                  "unverified": {
                    "value": {
                      "detail": "Phone number has not been verified."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Подтверждение не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "verification not found": {
                    "value": {
                      "detail": "Verification not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Код уже был использован.",
            "content": {
              "application/json": {
                "examples": {
                  "code been used": {
                    "value": {
                      "detail": "This code has already been used. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Код истёк. Запросите новый.",
            "content": {
              "application/json": {
                "examples": {
                  "expired": {
                    "value": {
                      "detail": "This code has expired. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/auth/token/refresh/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Обновление `access`-токена.",
        "description": "Принимает `refresh`-токен и возвращает новый `access`-токен. Используется для продления сессии без повторной авторизации.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh": {
                    "type": "string",
                    "description": "`Refresh`-токен, полученный при авторизации.",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0MjExODQ3NywiaWF0IjoxNzQxODU5Mjc3LCJqdGkiOiJjMTcwNmE5ZTc3MDA0ZTBiYWQ0MTI4OGQ5MjIyNTNjMSIsInVzZXJfaWQiOjN9.2zYybd7SZCqeWEGZNN-jfbpShfecPxNNBiuNdYjf2tE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешная авторизация",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access": {
                      "type": "string",
                      "description": "Новый `JWT` токен для авторизации.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQxODYxMDc3LCJpYXQiOjE3NDE4NTkyNzcsImp0aSI6IjFjYjIyZjk0OTMwNjRiNzQ4OWIzZmNiZTRiYzk4ZmJkIiwidXNlcl9pZCI6M30.430ZgG-LAM7Me57l5WtRtRPeYLm8MicrMvqPc3t8i6s"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "required fields": {
                    "value": {
                      "refresh": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "refresh": [
                        "This field may not be blank."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Токен неверный или истёк.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid token": {
                    "value": {
                      "detail": "Token is invalid or expired",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/auth/admin/password_verification/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Проверка пароля перед авторизацией администратора.",
        "description": "Проверяет введенный пароль администратора перед входом по коду.\n\n Если пароль верен, сервер разрешает отправку SMS-кода для входа.\n\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона администратора.",
                    "example": "+79991234567"
                  },
                  "password": {
                    "type": "string",
                    "description": "Пароль администратора.",
                    "example": "SecurePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пароль подтвержден.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password verified successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "password": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ],
                      "password": [
                        "This field may not be blank."
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Нет доступа.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "invalid": {
                    "value": {
                      "detail": "Invalid phone or password."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не найден.",
            "content": {
              "application/json": {
                "examples": {
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/users/check_admin/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Проверить является ли пользователь администратором. ",
        "description": "Принимает номер телефона и проверяет, является ли пользователь с этим номером администратором. \n\nВ случае, если пользователя с таким номером телефона не существует также отправляет ответ, что это не администратор.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона в формате `+7XXXXXXXXXX`.",
                    "example": "+79991234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пользователь найден и проверен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "is_admin": {
                      "type": "boolean",
                      "description": "Флаг, указывающий, является ли пользователь администратором.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/users/me/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Получить информацию о текущем пользователе.",
        "description": "Возвращает данные текущего авторизованного пользователя. \n\nДоступно только после успешной авторизации с использованием `Bearer` токена в заголовке запроса.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Профиль пользователя получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен. Пользователь заблокирован.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Редактирование профиля пользователя.",
        "description": "Позволяет пользователям изменить свое имя (`full_name`).\n\nАдминистраторы также могут изменять настройки приватности номера (`phone_privacy`).",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "full_name": {
                    "type": "string",
                    "description": "Новое имя пользователя.",
                    "example": "Петров Петр"
                  },
                  "phone_privacy": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private",
                      "protected"
                    ],
                    "description": "Настройки приватности номера (только для администраторов).",
                    "example": "public",
                    "default": "private"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Данные профиля успешно обновлены.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone_privacy": [
                        "Invalid phone privacy. Valid options are: ['public', 'private', 'protected']"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен. Пользователь заблокирован.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Удаление аккаунта текущего пользователя.",
        "description": "Позволяет пользователю самостоятельно удалить свой аккаунт. Требует авторизации (`Bearer Token`). Также требует подтверждение по SMS.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verification_token": {
                    "type": "string",
                    "description": "Токен верификации, подтверждающий удаление аккаунта.",
                    "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Аккаунт успешно удален."
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "verification_token": [
                        "Enter a valid 32-character verification token (letters and digits only)."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "verification_token": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "verification_token": [
                        "This field may not be blank."
                      ]
                    }
                  },
                  "wrong phone number": {
                    "value": {
                      "detail": "Phone number does not match the verification record."
                    }
                  },
                  "wrong mode": {
                    "value": {
                      "detail": "Invalid verification mode."
                    }
                  },
                  "unverified": {
                    "value": {
                      "detail": "Phone number has not been verified."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен. Пользователь заблокирован.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "superuser": {
                    "value": {
                      "detail": "Superuser account cannot be deleted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Подтверждение не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "verification not found": {
                    "value": {
                      "detail": "Verification not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Код уже был использован.",
            "content": {
              "application/json": {
                "examples": {
                  "code been used": {
                    "value": {
                      "detail": "This code has already been used. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Код истёк. Запросите новый.",
            "content": {
              "application/json": {
                "examples": {
                  "expired": {
                    "value": {
                      "detail": "This code has expired. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/users/me/phone/": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Cмена номера телефона.",
        "description": "Сервер проверяет, что коды на старый и новый номер были подтверждены перед обновлением номера телефона.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Новый номер телефона для смены в формате `+7XXXXXXXXXX`",
                    "example": "+79991234567"
                  },
                  "old_verification_token": {
                    "type": "string",
                    "description": "Токен подтверждения старого номера телефона.",
                    "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                  },
                  "new_verification_token": {
                    "type": "string",
                    "description": "Токен подтверждения нового номера телефона.",
                    "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Номер телефона успешно изменен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "new_phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "old_verification_token": [
                        "Enter a valid 32-character verification token (letters and digits only)."
                      ],
                      "new_verification_token": [
                        "Enter a valid 32-character verification token (letters and digits only)."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "new_phone": [
                        "This field is required."
                      ],
                      "old_verification_token": [
                        "This field is required."
                      ],
                      "new_verification_token": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "new_phone": [
                        "This field may not be blank."
                      ],
                      "old_verification_token": [
                        "This field may not be blank."
                      ],
                      "new_verification_token": [
                        "This field may not be blank."
                      ]
                    }
                  },
                  "wrong phone number": {
                    "value": {
                      "detail": "Phone number does not match the verification record."
                    }
                  },
                  "wrong mode": {
                    "value": {
                      "detail": "Invalid verification mode."
                    }
                  },
                  "unverified": {
                    "value": {
                      "detail": "Phone number has not been verified."
                    }
                  },
                  "wrong new phone": {
                    "value": {
                      "new_phone": [
                        "Given new phone number is already in use."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен. Пользователь заблокирован.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Подтверждение не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "verification not found": {
                    "value": {
                      "detail": "Verification not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Код уже был использован.",
            "content": {
              "application/json": {
                "examples": {
                  "code been used": {
                    "value": {
                      "detail": "This code has already been used. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Код истёк. Запросите новый.",
            "content": {
              "application/json": {
                "examples": {
                  "expired": {
                    "value": {
                      "detail": "This code has expired. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/users/me/password/": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Смена пароля (только для администраторов).",
        "description": "Позволяет администратору сменить пароль.\n\nПеред этим необходимо отправить код и подтвердить его через `/auth/codes/`.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": {
                    "type": "string",
                    "pattern": "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,64}$",
                    "description": "Текущий пароль.",
                    "example": "OLDSecurePassword1"
                  },
                  "new_password": {
                    "type": "string",
                    "pattern": "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,64}$",
                    "description": "Новый пароль (должен содержать минимум 8 символов, хотя бы 1 букву и 1 цифру).",
                    "example": "NewSecurePassword123"
                  },
                  "verification_token": {
                    "type": "string",
                    "description": "Токен подтверждения для смены пароля.",
                    "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пароль успешно изменен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "new_password": [
                        "This password is too short. It must contain at least 8 characters.",
                        "This password is too common.",
                        "This password is entirely numeric."
                      ],
                      "verification_token": [
                        "Enter a valid 32-character verification token (letters and digits only)."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "old_password": [
                        "This field is required."
                      ],
                      "new_password": [
                        "This field is required."
                      ],
                      "verification_token": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "old_password": [
                        "This field may not be blank."
                      ],
                      "new_password": [
                        "This field may not be blank."
                      ],
                      "verification_token": [
                        "This field may not be blank."
                      ]
                    }
                  },
                  "wrong phone number": {
                    "value": {
                      "detail": "Phone number does not match the verification record."
                    }
                  },
                  "wrong mode": {
                    "value": {
                      "detail": "Invalid verification mode."
                    }
                  },
                  "unverified": {
                    "value": {
                      "detail": "Phone number has not been verified."
                    }
                  },
                  "wrong current password": {
                    "value": {
                      "old_password": [
                        "Current password is incorrect."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Подтверждение не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "verification not found": {
                    "value": {
                      "detail": "Verification not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Код уже был использован.",
            "content": {
              "application/json": {
                "examples": {
                  "code been used": {
                    "value": {
                      "detail": "This code has already been used. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Код истёк. Запросите новый.",
            "content": {
              "application/json": {
                "examples": {
                  "expired": {
                    "value": {
                      "detail": "This code has expired. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/users/me/password/reset/": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Восстановление пароля (по SMS-коду).",
        "description": "Позволяет пользователю восстановить пароль после подтверждения номера через SMS. Перед этим запросом необходимо подтверить смену по SMS.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона в формате `+7XXXXXXXXXX`.",
                    "example": "+79991234567"
                  },
                  "new_password": {
                    "type": "string",
                    "pattern": "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,64}$",
                    "description": "Новый пароль (должен содержать минимум 8 символов, хотя бы 1 букву и 1 цифру).",
                    "example": "NewSecurePassword123"
                  },
                  "verification_token": {
                    "type": "string",
                    "description": "Токен подтверждения для сброса пароля.",
                    "example": "APL8MSZdf3Myec0RaBM6JiqBPj7pMdNa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пароль успешно восстановлен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password successfully reset."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "new_password": [
                        "This password is too short. It must contain at least 8 characters.",
                        "This password is too common.",
                        "This password is entirely numeric."
                      ],
                      "verification_token": [
                        "Enter a valid 32-character verification token (letters and digits only)."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "new_password": [
                        "This field is required."
                      ],
                      "verification_token": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ],
                      "new_password": [
                        "This field may not be blank."
                      ],
                      "verification_token": [
                        "This field may not be blank."
                      ]
                    }
                  },
                  "wrong phone number": {
                    "value": {
                      "detail": "Phone number does not match the verification record."
                    }
                  },
                  "wrong mode": {
                    "value": {
                      "detail": "Invalid verification mode."
                    }
                  },
                  "unverified": {
                    "value": {
                      "detail": "Phone number has not been verified."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Подтверждение или пользователь не найдено.",
            "content": {
              "application/json": {
                "examples": {
                  "verification not found": {
                    "value": {
                      "detail": "Verification not found."
                    }
                  },
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Код уже был использован.",
            "content": {
              "application/json": {
                "examples": {
                  "code been used": {
                    "value": {
                      "detail": "This code has already been used. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Код истёк. Запросите новый.",
            "content": {
              "application/json": {
                "examples": {
                  "expired": {
                    "value": {
                      "detail": "This code has expired. Please request a new one."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/users/{user_id}/": {
      "get": {
        "tags": [
          "Admin. Users."
        ],
        "summary": "Получение информации о пользователе (только для администраторов).",
        "description": "Позволяет администраторам просматривать данные любого пользователя по его `id`.\n\n Требуется `Bearer` токен в заголовке запроса.\n\nДоступ разрешен только администраторам.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Уникальный идентификатор пользователя."
          }
        ],
        "responses": {
          "200": {
            "description": "Профиль пользователя получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не найден",
            "content": {
              "application/json": {
                "examples": {
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/users/{user_id}/block/": {
      "patch": {
        "tags": [
          "Admin. Users."
        ],
        "summary": "Блокировка пользователя (только для администраторов).",
        "description": "Позволяет администратору заблокировать пользователя, запретив ему вход в систему.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Уникальный идентификатор пользователя."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Причина блокировки.",
                    "example": "Спам"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пользователь успешно заблокирован.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "required reason": {
                    "value": {
                      "detail": "Reason is required for blocking a user."
                    }
                  },
                  "already blocked": {
                    "value": {
                      "detail": "User is already blocked."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "cannot block admin": {
                    "value": {
                      "detail": "You cannot block an admin."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не найден",
            "content": {
              "application/json": {
                "examples": {
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/users/{user_id}/unblock/": {
      "patch": {
        "tags": [
          "Admin. Users."
        ],
        "summary": "Отмена блокировки пользователя (только для администраторов).",
        "description": "Позволяет администратору разблокировать пользователя, разрешив ему вход в систему.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Уникальный идентификатор пользователя."
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно разблокирован.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "already not blocked": {
                    "value": {
                      "detail": "User is already active."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "cannot unblock admin": {
                    "value": {
                      "detail": "You cannot unblock an admin."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не найден",
            "content": {
              "application/json": {
                "examples": {
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/users/search/": {
      "post": {
        "tags": [
          "Admin. Users."
        ],
        "summary": "Поиск пользователя по номеру телефона (только для администраторов).",
        "description": "Позволяет администратору искать пользователя по номеру телефона.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона пользователя в формате `+7XXXXXXXXXX`.",
                    "example": "+79991234567"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Пользователь найден.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Пользователь не найден",
            "content": {
              "application/json": {
                "examples": {
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/": {
      "get": {
        "tags": [
          "Barriers"
        ],
        "summary": "Получение списка всех шлагбаумов (поиск, фильтрация, пагинация).",
        "description": "Позволяет получить список всех зарегистрированных шлагбаумов.\n\nМожно использовать фильтрацию по адресу, поддерживает пагинацию. Также поддерживает сортировку по адресу.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "address",
                "-address"
              ]
            }
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Манежная площадь"
            },
            "description": "Поиск по части адреса."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы (для пагинации)."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список шлагбаумов с фильтрацией, пагинацией и сортировкой.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "barriers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BarrierView"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/my/": {
      "get": {
        "tags": [
          "Barriers"
        ],
        "summary": "Получение списка шлагбаумов, доступных пользователю.",
        "description": "Список шлагбаумов, к которым у пользователя есть доступ.\n\nЕсли администратор делает этот запрос, он видит только те шлагбаумы, в которых он добавлен, как обычный пользователь.\n\nПоддерживает сортировку по адресу.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "address",
                "-address"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы (для пагинации)."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список своих шлагбаумов с пагинацией и сортировкой.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "barriers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BarrierView"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/": {
      "get": {
        "tags": [
          "Barriers"
        ],
        "summary": "Получение информации о шлагбауме.",
        "description": "Возвращает полную информацию о шлагбауме по его `ID`.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Уникальный идентификатор шлагбаума."
          }
        ],
        "responses": {
          "200": {
            "description": "Детальная информация о шлагбауме.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarrierView"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/limits/": {
      "get": {
        "tags": [
          "Limits"
        ],
        "summary": "Получение всех лимитов шлагбаума.",
        "description": "Возвращает объект с установленными лимитами. Если лимит не установлен, значение равно null.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "responses": {
          "200": {
            "description": "Список лимитов получен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarrierLimitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/check_access/": {
      "get": {
        "tags": [
          "Barriers"
        ],
        "summary": "Проверка доступа пользователя к шлагбауму",
        "description": "Позволяет проверить, имеет ли текущий пользователь доступ к указанному шлагбауму.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о наличии доступа.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "has_access": {
                      "type": "boolean",
                      "description": "Флаг, указывающий, есть ли у пользователя доступ к шлагбауму.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/": {
      "post": {
        "tags": [
          "Admin. Barriers."
        ],
        "summary": "Создание нового шлагбаума (только для администраторов).",
        "description": "Позволяет администратору создать новый шлагбаум, указав все необходимые параметры.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Адрес шлагбаума.",
                    "example": "Манежная площадь, 1, Москва"
                  },
                  "device_phone": {
                    "type": "string",
                    "description": "Номер телефона устройства управления шлагбаумом.",
                    "example": "+79991234567"
                  },
                  "device_model": {
                    "type": "string",
                    "enum": [
                      "RTU5025",
                      "RTU5035",
                      "Telemetrica",
                      "Elfoc"
                    ],
                    "description": "Модель GSM модуля.",
                    "example": "RTU5025"
                  },
                  "device_phones_amount": {
                    "type": "integer",
                    "description": "Количество номеров, поддерживаемых устройством.",
                    "example": 999
                  },
                  "device_password": {
                    "type": "integer",
                    "description": "Пароль от устройства, если устройство его требует. Обычно состоит из 4 цифр.",
                    "example": 1234
                  },
                  "additional_info": {
                    "type": "string",
                    "description": "Дополнительная информация о шлагбауме.",
                    "example": "Время работы администратора: По будням с 10 до 18."
                  },
                  "is_public": {
                    "type": "boolean",
                    "description": "Можно ли найти шлагбаум в системе через поиск.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Шлагбаум успешно создан.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarrierView"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "device_model": [
                        "Invalid device model. Valid models are: ['RTU5025', 'RTU5035', 'Telemetrica', 'Elfoc']"
                      ],
                      "device_phones_amount": [
                        "The number of device phone slots must be greater than 0."
                      ],
                      "device_password": [
                        "Enter a valid device password. Must be exactly 4 digits."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "device_password": [
                        "Device password is required for this device model."
                      ]
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Номер телефона уже используется.",
            "content": {
              "application/json": {
                "examples": {
                  "phone is used": {
                    "value": {
                      "detail": "This phone is already taken by another barrier."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/my/": {
      "get": {
        "tags": [
          "Admin. Barriers."
        ],
        "summary": "Получение списка шлагбаумов, которыми управляет администратор.",
        "description": "Возвращает список всех шлагбаумов, которыми управляет текущий администратор.\n\nПоддерживает сортировку по адресу, времени создания и времени изменения.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "address",
                "-address",
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы (для пагинации)."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список шлагбаумов, которыми управляет администратор.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "barriers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BarrierView"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/": {
      "get": {
        "tags": [
          "Admin. Barriers."
        ],
        "summary": "Получение данных шлагбаума - для администраторов.",
        "description": "Получение расширенного списка данных для шлагбаума. Только для администратора.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` удаляемого шлагбаума."
          }
        ],
        "responses": {
          "200": {
            "description": "Детальная информация о шлагбауме.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminBarrierView"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "patch": {
        "tags": [
          "Admin. Barriers."
        ],
        "summary": "Редактирование шлагбаума (только для администраторов).",
        "description": "Позволяет администратору обновить информацию о шлагбауме, включая адрес, телефон устройства, настройки приватности.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума для обновления."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "additional_info": {
                    "type": "string",
                    "description": "Дополнительная информация о шлагбауме.",
                    "example": "Время работы администратора: По выходным с 12 до 18."
                  },
                  "is_public": {
                    "type": "boolean",
                    "description": "Определяет, можно ли найти шлагбаум через поиск в системе.",
                    "example": false
                  },
                  "device_password": {
                    "type": "integer",
                    "description": "Пароль от устройства, если устройство его требует. Обычно состоит из 4 цифр.",
                    "example": 1234
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Шлагбаум успешно обновлен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarrierView"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "device_password": [
                        "Enter a valid device password. Must be exactly 4 digits."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "delete": {
        "tags": [
          "Admin. Barriers."
        ],
        "summary": "Удаление шлагбаума (только для администраторов).",
        "description": "Удаление шлагбаума полностью из системы. Только для администратора.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` удаляемого шлагбаума."
          }
        ],
        "responses": {
          "204": {
            "description": "Шлагбаум успешно удален."
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/limits/": {
      "patch": {
        "tags": [
          "Limits"
        ],
        "summary": "Обновление или установка лимитов шлагбаума (только для администраторов).",
        "description": "Позволяет установить новые лимиты или обновить существующие.\n\nМожно передавать один или несколько лимитов, остальные останутся без изменений.\n\nЕсли передать `null`, лимит будет удален.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarrierLimitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Лимиты обновлены.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarrierLimitResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "detail": [
                        "Invalid limit. Valid limits are: ['global_schedule_phone_limit', 'global_temp_phone_limit', 'schedule_interval_limit', 'sms_weekly_limit', 'user_phone_limit', 'user_schedule_phone_limit', 'user_temp_phone_limit']."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "detail": [
                        "At least one field must be provided."
                      ]
                    }
                  },
                  "too much": {
                    "value": {
                      "detail": [
                        "Each limit must not exceed the amount of phones in device."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/settings/": {
      "get": {
        "tags": [
          "Admin. Barriers."
        ],
        "summary": "Получение списка доступных настроек для шлагбаума (только для администраторов).",
        "description": "Возвращает список возможных настроек для данного шлагбаума в зависимости от его модели.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "responses": {
          "200": {
            "description": "Список доступных настроек получен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Название настройки.",
                            "example": "Сколько времени держать закрытым после звонка от 000 до 999 в секундах"
                          },
                          "key": {
                            "type": "string",
                            "description": "Ключ настройки.",
                            "example": "opening_duration"
                          },
                          "description": {
                            "type": "string",
                            "description": "Дополнительное описание настройки.",
                            "example": "Задает время, в течение которого шлагбаум остается закрытым (в секундах)."
                          },
                          "params": {
                            "type": "array",
                            "description": "Список параметров, необходимых для этой настройки.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Название параметра.",
                                  "example": "Время (сек)"
                                },
                                "key": {
                                  "type": "string",
                                  "description": "Ключ параметра.",
                                  "example": "duration"
                                },
                                "example": {
                                  "type": "string",
                                  "description": "Пример значения.",
                                  "example": "15"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Дополнительное описание параметра.",
                                  "example": "Задает длительность в секундах."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный параметр запроса - `barrier_id`."
          },
          "401": {
            "description": "Пользователь не авторизован."
          },
          "403": {
            "description": "Нет доступа к данному шлагбауму."
          },
          "404": {
            "description": "Шлагбаум с указанным `id` не найден."
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "patch": {
        "tags": [
          "Admin. Barriers."
        ],
        "summary": "Изменение настроек шлагбаума (только для администраторов).",
        "description": "Позволяет администратору изменить одну или несколько настроек шлагбаума. Сервер проверяет валидность переданных параметров перед отправкой команды.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Список изменяемых настроек.",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Ключ настройки.",
                      "example": "opening_duration"
                    },
                    "params": {
                      "type": "array",
                      "description": "Список параметров для изменения.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Ключ параметра.",
                            "example": "duration"
                          },
                          "value": {
                            "type": "string",
                            "description": "Новое значение параметра.",
                            "example": "15"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Запрос на изменение настроек успешно отправлен."
          },
          "400": {
            "description": "Некорректный параметр запроса - `barrier_id`."
          },
          "401": {
            "description": "Пользователь не авторизован."
          },
          "403": {
            "description": "Доступ запрещен. Только для администраторов."
          },
          "404": {
            "description": "Шлагбаум с указанным `id` не найден."
          },
          "429": {
            "description": "Превышен лимит запросов. Попробуйте позже."
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/actions/": {
      "get": {
        "tags": [
          "Barriers Action History"
        ],
        "summary": "Получение истории действий со своими номерами телефона в шлагбауме.",
        "description": "Позволяет получить список всех действий со всеми номерами телефона, которые были созданы в выбранном шлагбауме. Доступна пагинация, сортировка и фильтрация по различным параметрам.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "barrier__address",
                "-barrier__address",
                "phone__phone",
                "-phone__phone",
                "phone__type",
                "-phone__type",
                "author",
                "-author",
                "action_type",
                "-action_type",
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Фильтр по ID телефона."
          },
          {
            "name": "author",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "admin",
                "system"
              ]
            },
            "description": "Фильтр по источнику действия."
          },
          {
            "name": "action_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "add_phone",
                "delete_phone",
                "update_phone",
                "barrier_setting"
              ]
            },
            "description": "Тип действия, выполненного с телефоном или шлагбаумом."
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "manual",
                "barrier_exit",
                "access_granted",
                "primary_phone_change",
                "schedule_update",
                "end_time",
                "barrier_deleted",
                "user_deleted"
              ]
            },
            "description": "Причина действия."
          },
          {
            "name": "created_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            },
            "description": "Фильтрация логов С даты (включительно)."
          },
          {
            "name": "created_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            },
            "description": "Фильтрация логов ДО даты (включительно)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы (для пагинации)."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список действий получен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BarrierView"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/actions/{action_id}/": {
      "get": {
        "tags": [
          "Barriers Action History"
        ],
        "summary": "Получение информации об одном действии в истории.",
        "description": "Возвращает подробную информацию об отдельной записи в истории действий по её `ID`. Для пользователя доступны только действия, связанные с его телефонами.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` действия."
          }
        ],
        "responses": {
          "200": {
            "description": "Детальная информация о действии.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarrierActionLog"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this log entry."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Действие не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier log not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/actions/": {
      "get": {
        "tags": [
          "Barriers Action History"
        ],
        "summary": "Получение истории действий со всеми номерами телефона в шлагбауме и с самим шлагбаумом (админ).",
        "description": "Позволяет получить список всех действий со шлагбаумом. Доступна пагинация, сортировка и фильтрация по различным параметрам.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "barrier__address",
                "-barrier__address",
                "phone__phone",
                "-phone__phone",
                "phone__type",
                "-phone__type",
                "author",
                "-author",
                "action_type",
                "-action_type",
                "created_at",
                "-created_at"
              ]
            }
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Фильтр по ID пользователя."
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Фильтр по ID телефона."
          },
          {
            "name": "author",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "admin",
                "system"
              ]
            },
            "description": "Фильтр по источнику действия."
          },
          {
            "name": "action_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "add_phone",
                "delete_phone",
                "update_phone",
                "barrier_setting"
              ]
            },
            "description": "Тип действия, выполненного с телефоном или шлагбаумом."
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "manual",
                "barrier_exit",
                "access_granted",
                "primary_phone_change",
                "schedule_update",
                "end_time",
                "barrier_deleted",
                "user_deleted"
              ]
            },
            "description": "Причина действия."
          },
          {
            "name": "created_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            },
            "description": "Фильтрация логов С даты (включительно)."
          },
          {
            "name": "created_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            },
            "description": "Фильтрация логов ДО даты (включительно)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы (для пагинации)."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список действий получен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BarrierView"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/actions/{action_id}/": {
      "get": {
        "tags": [
          "Barriers Action History"
        ],
        "summary": "Получение информации об одном действии в истории.",
        "description": "Возвращает подробную информацию об отдельной записи в истории действий по её `ID`. Администраторы могут просматривать любые действия в своих шлагбаумах.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` действия."
          }
        ],
        "responses": {
          "200": {
            "description": "Детальная информация о действии.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BarrierActionLog"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this log entry."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Действие не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "barrier log not found": {
                    "value": {
                      "detail": "Barrier log not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/sms/": {
      "get": {
        "tags": [
          "Barriers SMS"
        ],
        "summary": "Получение истории SMS, связанных с вашими телефонами в шлагбауме.",
        "description": "Возвращает список SMS сообщений, связанных с телефонами пользователя в выбранном шлагбауме. Доступны фильтрация, сортировка и пагинация.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "message_type",
                "-message_type",
                "phone_command_type",
                "-phone_command_type",
                "status",
                "-status",
                "sent_at",
                "-sent_at",
                "updated_at",
                "-updated_at",
                "log__phone",
                "-log__phone",
                "log__created_at",
                "-log__created_at"
              ]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 123
            },
            "description": "Фильтр по `ID` телефона."
          },
          {
            "name": "log",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 55
            },
            "description": "Фильтр по `ID` действия (лога)."
          },
          {
            "name": "message_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "phone_command"
              ]
            }
          },
          {
            "name": "phone_command_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "close"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "sent",
                "success",
                "failed"
              ]
            }
          },
          {
            "name": "sent_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          },
          {
            "name": "sent_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          },
          {
            "name": "updated_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          },
          {
            "name": "updated_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список SMS сообщений получен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "sms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SmsMessage"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/sms/{sms_id}/": {
      "get": {
        "tags": [
          "Barriers SMS"
        ],
        "summary": "Получение одного SMS-сообщения.",
        "description": "Возвращает одно SMS-сообщение, связанное с действиями пользователя. Доступны только сообщения с типом `phone_command`.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "sms_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` сообщения."
          }
        ],
        "responses": {
          "200": {
            "description": "Сообщение получено.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsMessage"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this SMS."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Смс не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "sms not found": {
                    "value": {
                      "detail": "Sms message not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/sms/": {
      "get": {
        "tags": [
          "Barriers SMS"
        ],
        "summary": "Получение истории SMS, связанных с вашими телефонами в шлагбауме.",
        "description": "Возвращает список SMS сообщений, связанных с телефонами пользователя в выбранном шлагбауме. Доступны фильтрация, сортировка и пагинация.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "message_type",
                "-message_type",
                "phone_command_type",
                "-phone_command_type",
                "status",
                "-status",
                "sent_at",
                "-sent_at",
                "updated_at",
                "-updated_at",
                "log__phone",
                "-log__phone",
                "log__created_at",
                "-log__created_at"
              ]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 123
            },
            "description": "Фильтр по `ID` телефона."
          },
          {
            "name": "log",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 55
            },
            "description": "Фильтр по `ID` действия (лога)."
          },
          {
            "name": "message_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "phone_command",
                "barrier_setting",
                "balance_check"
              ]
            }
          },
          {
            "name": "phone_command_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "close"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "sent",
                "success",
                "failed"
              ]
            }
          },
          {
            "name": "sent_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          },
          {
            "name": "sent_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          },
          {
            "name": "updated_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          },
          {
            "name": "updated_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-08-01T10:00:00+03:00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список SMS сообщений получен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "sms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SmsMessage"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/sms/{sms_id}/": {
      "get": {
        "tags": [
          "Barriers SMS"
        ],
        "summary": "Получение одного SMS-сообщения.",
        "description": "Возвращает одно SMS-сообщение, связанное с действиями пользователя или администратора. Доступны сообщения с типом `phone_command`, `barrier_setting`, `balance_check`.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "sms_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` сообщения."
          }
        ],
        "responses": {
          "200": {
            "description": "Сообщение получено.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsMessage"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this SMS."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Смс не найдено",
            "content": {
              "application/json": {
                "examples": {
                  "sms not found": {
                    "value": {
                      "detail": "Sms message not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/balance/": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "",
        "description": "",
        "security": [],
        "parameters": [],
        "responses": {
        }
      }
    },
    "/access_requests/": {
      "post": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Отправка запроса на доступ.",
        "description": "Позволяет пользователю отправить запрос на доступ к публичному шлагбауму.\n\nЗапрещено отправлять запрос, если шлагбаум приватный, удалённый, если уже существует активная заявка или активный доступ.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "integer",
                    "description": "`ID` пользователя.",
                    "example": 42
                  },
                  "barrier": {
                    "type": "integer",
                    "description": "`ID` шлагбаума.",
                    "example": 42
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запрос успешно создан.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRequest"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "required fields": {
                    "value": {
                      "barrier": [
                        "This field is required."
                      ],
                      "user": [
                        "This field is required."
                      ]
                    }
                  },
                  "null fields": {
                    "value": {
                      "barrier": [
                        "This field may not be null."
                      ],
                      "user": [
                        "This field may not be null."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "wrong user": {
                    "value": {
                      "detail": "You cannot create access request for other user."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ресурс не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  },
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Ресурс уже существует",
            "content": {
              "application/json": {
                "examples": {
                  "access request exists": {
                    "value": {
                      "detail": "An active access request already exists for this user and barrier."
                    }
                  },
                  "user barrier exists": {
                    "value": {
                      "detail": "This user already has access to the barrier."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/access_requests/my/": {
      "get": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Просмотр своих заявок.",
        "description": "Позволяет фильтровать заявки по входящим/исходящим, статусу, шлагбауму, скрытию и поддерживает пагинацию.\n\nТакже есть сортировка по времени создания, времени закрытия заявки и по статусу.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "finished_at",
                "-finished_at",
                "status",
                "-status"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "incoming",
                "outgoing"
              ]
            },
            "description": "Фильтр по типу заявок: `incoming` - входящие (те, которые можно принять/отклонить), `outgoing` - исходящие (те, которые отправил текущий пользователь)."
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "cancelled"
              ]
            },
            "description": "Фильтр по статусу заявки."
          },
          {
            "name": "barrier",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Фильтр по `ID` шлагбаума."
          },
          {
            "name": "hidden",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Фильтр по скрытым заявкам (`true` - скрытые, `false` - только видимые). По умолчанию показываются только видимые."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы (для пагинации)."
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список заявок получен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "access_requests": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccessRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/access_requests/{request_id}/": {
      "get": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Просмотр заявки на доступ.",
        "description": "Позволяет получить информацию о конкретной заявке на доступ по её `ID`.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` запроса."
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о заявке получена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRequest"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "wrong request": {
                    "value": {
                      "detail": "You do not have access to this access request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Запрос не найден",
            "content": {
              "application/json": {
                "examples": {
                  "access request not found": {
                    "value": {
                      "detail": "Access request not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "patch": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Обновление заявки пользователем.",
        "description": "Позволяет принять, отклонить или отменить запрос. \n\nЕсли `status` = `cancelled`, запрос отменяет отправитель. Если `status` = `accepted` или `rejected`, это делает получатель запроса.\n\nТакже позволяет скрыть запрос у пользователя или отменить скрытие.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` запроса."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "rejected",
                      "cancelled"
                    ],
                    "description": "Новый статус заявки."
                  },
                  "hidden_for_user": {
                    "type": "boolean",
                    "description": "Скрыть заявку для пользователя."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Заявка обновлена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRequest"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid transition": {
                    "value": {
                      "status": [
                        "Invalid status transition: 'cancelled' -> 'accepted'.",
                        "Invalid status transition: 'cancelled' -> 'rejected'.",
                        "Invalid status transition: 'cancelled' -> 'pending'.",
                        "Invalid status transition: 'accepted' -> 'cancelled'.",
                        "Invalid status transition: 'accepted' -> 'rejected'.",
                        "Invalid status transition: 'accepted' -> 'pending'.",
                        "Invalid status transition: 'rejected' -> 'accepted'.",
                        "Invalid status transition: 'rejected' -> 'cancelled'.",
                        "Invalid status transition: 'rejected' -> 'pending'."
                      ]
                    }
                  },
                  "invalid hidden": {
                    "value": {
                      "hidden_for_admin": [
                        "Only admins can modify field 'hidden_for_admin'."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "wrong request": {
                    "value": {
                      "detail": "You do not have access to this access request."
                    }
                  },
                  "cannot cancel": {
                    "value": {
                      "detail": "You are not allowed to cancel this request."
                    }
                  },
                  "cannot accept or reject": {
                    "value": {
                      "detail": "You are not allowed to accept or reject this request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Запрос не найден",
            "content": {
              "application/json": {
                "examples": {
                  "access request not found": {
                    "value": {
                      "detail": "Access request not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/access_requests/": {
      "post": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Приглашение пользователя к шлагбауму администратором.",
        "description": "Позволяет администратору отправить приглашение пользователю на доступ к своему шлагбауму.\n\nАдминистратор не может пригласить неактивного пользователя. Также запрещено приглашать, если уже есть активная заявка или у пользователя уже есть доступ.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "integer",
                    "description": "`ID` пользователя.",
                    "example": 42
                  },
                  "barrier": {
                    "type": "integer",
                    "description": "`ID` шлагбаума.",
                    "example": 42
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Запрос успешно создан.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRequest"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "required fields": {
                    "value": {
                      "barrier": [
                        "This field is required."
                      ],
                      "user": [
                        "This field is required."
                      ]
                    }
                  },
                  "null fields": {
                    "value": {
                      "barrier": [
                        "This field may not be null."
                      ],
                      "user": [
                        "This field may not be null."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "wrong barrier": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ресурс не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  },
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Ресурс уже существует",
            "content": {
              "application/json": {
                "examples": {
                  "access request exists": {
                    "value": {
                      "detail": "An active access request already exists for this user and barrier."
                    }
                  },
                  "user barrier exists": {
                    "value": {
                      "detail": "This user already has access to the barrier."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/access_requests/my/": {
      "get": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Просмотр заявок на доступ к шлагбаумам администратора.",
        "description": "Позволяет фильтровать заявки по входящим/исходящим, статусу, шлагбауму, скрытию и поддерживает пагинацию.\n\nТакже есть сортировка по времени создания, времени закрытия заявки и по статусу.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "finished_at",
                "-finished_at",
                "status",
                "-status"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "incoming",
                "outgoing"
              ]
            },
            "description": "Фильтр по типу заявок: `incoming` - входящие (те, которые можно принять/отклонить), `outgoing` - исходящие (те, которые отправил текущий пользователь)."
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "accepted",
                "rejected",
                "cancelled"
              ]
            },
            "description": "Фильтр по статусу заявки."
          },
          {
            "name": "barrier",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Фильтр по `ID` шлагбаума."
          },
          {
            "name": "hidden",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Фильтр по скрытым заявкам (`true` - скрытые, `false` - только видимые). По умолчанию показываются только видимые."
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы (для пагинации)."
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список заявок получен.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "access_requests": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccessRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/access_requests/{request_id}/": {
      "get": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Просмотр заявки на доступ.",
        "description": "Позволяет получить информацию о конкретной заявке на доступ по её `ID`.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` запроса."
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о заявке получена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRequest"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "wrong request": {
                    "value": {
                      "detail": "You do not have access to this access request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Запрос не найден",
            "content": {
              "application/json": {
                "examples": {
                  "access request not found": {
                    "value": {
                      "detail": "Access request not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "patch": {
        "tags": [
          "Access Requests"
        ],
        "summary": "Обновление заявки администратором.",
        "description": "Позволяет принять, отклонить или отменить запрос. \n\nЕсли `status` = `cancelled`, запрос отменяет отправитель. Если `status` = `accepted` или `rejected`, это делает получатель запроса.\n\nТакже позволяет скрыть запрос у администратора или отменить скрытие.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` запроса."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "rejected",
                      "cancelled"
                    ],
                    "description": "Новый статус заявки."
                  },
                  "hidden_for_admin": {
                    "type": "boolean",
                    "description": "Скрыть заявку для администратора."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Заявка обновлена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessRequest"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid transition": {
                    "value": {
                      "status": [
                        "Invalid status transition: 'cancelled' -> 'accepted'.",
                        "Invalid status transition: 'cancelled' -> 'rejected'.",
                        "Invalid status transition: 'cancelled' -> 'pending'.",
                        "Invalid status transition: 'accepted' -> 'cancelled'.",
                        "Invalid status transition: 'accepted' -> 'rejected'.",
                        "Invalid status transition: 'accepted' -> 'pending'.",
                        "Invalid status transition: 'rejected' -> 'accepted'.",
                        "Invalid status transition: 'rejected' -> 'cancelled'.",
                        "Invalid status transition: 'rejected' -> 'pending'."
                      ]
                    }
                  },
                  "invalid hidden": {
                    "value": {
                      "hidden_for_user": [
                        "Only users can modify field 'hidden_for_user'."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "wrong request": {
                    "value": {
                      "detail": "You do not have access to this access request."
                    }
                  },
                  "cannot cancel": {
                    "value": {
                      "detail": "You are not allowed to cancel this request."
                    }
                  },
                  "cannot accept or reject": {
                    "value": {
                      "detail": "You are not allowed to accept or reject this request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Запрос не найден",
            "content": {
              "application/json": {
                "examples": {
                  "access request not found": {
                    "value": {
                      "detail": "Access request not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/leave/": {
      "delete": {
        "tags": [
          "Barriers. Users."
        ],
        "summary": "Пользователь выходит из шлагбаума.",
        "description": "Позволяет текущему пользователю покинуть группу доступа к шлагбауму.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно вышел из шлагбаума.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Left the barrier successfully."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/users/": {
      "get": {
        "tags": [
          "Barriers. Users."
        ],
        "summary": "Получение списка пользователей шлагбаума (только для администраторов).",
        "description": "Позволяет администратору получить список пользователей, имеющих доступ к шлагбауму.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "full_name",
                "-full_name",
                "phone",
                "-phone"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы для пагинации."
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список пользователей шлагбаума.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Шлагбаум не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/users/{user_id}/": {
      "delete": {
        "tags": [
          "Barriers. Users."
        ],
        "summary": "Удаление пользователя из шлагбаума (админ).",
        "description": "Позволяет администратору удалить пользователя из группы доступа к шлагбауму.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` пользователя."
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно удален из шлагбаума.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User successfully removed from barrier."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ресурс не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  },
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  },
                  "user not in barrier": {
                    "value": {
                      "detail": "User not found in this barrier."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/phones/": {
      "post": {
        "tags": [
          "Phones"
        ],
        "summary": "Добавление номера пользователю в шлагбауме.",
        "description": "Пользователь добавляет свой новый номер в шлагбаум.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона в формате `+7XXXXXXXXXX`",
                    "example": "+79991234567"
                  },
                  "name": {
                    "type": "string",
                    "description": "Название номера.",
                    "example": "Гость Иван"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "permanent",
                      "temporary",
                      "schedule"
                    ],
                    "description": "Тип номера (постоянный, временный, по расписанию).",
                    "example": "temporary"
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Дата и время начала действия (только для временных номеров).",
                    "example": "2025-08-01T10:00:00+03:00"
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Дата и время окончания действия (только для временных номеров).",
                    "example": "2025-08-01T18:00:00+03:00"
                  },
                  "schedule": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Номер добавлен пользователю.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "start_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ],
                      "end_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ],
                      "schedule": {
                        "monday": [
                          {
                            "start_time": [
                              "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                            ],
                            "end_time": [
                              "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "user": [
                        "This field is required."
                      ],
                      "time": "start_time and end_time are required for temporary phone.",
                      "schedule": {
                        "monday": [
                          {
                            "start_time": [
                              "This field is required."
                            ],
                            "end_time": [
                              "This field is required."
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required schedule": {
                    "value": {
                      "schedule": "Schedule is required for schedule phone type."
                    }
                  },
                  "blank null fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ],
                      "user": [
                        "This field may not be null."
                      ]
                    }
                  },
                  "temporary interval": {
                    "value": {
                      "time": "Interval must be at least 30 minutes long."
                    }
                  },
                  "invalid time": {
                    "value": {
                      "start_time": "start_time must be at least 30 minutes in the future.",
                      "end_time": "end_time must be after start_time."
                    }
                  },
                  "schedule interval limit": {
                    "value": {
                      "schedule": "Phone schedule exceeds allowed number of intervals (5 max)."
                    }
                  },
                  "schedule minimum interval": {
                    "value": {
                      "schedule": "Schedule must contain at least one interval."
                    }
                  },
                  "schedule intervals overlap": {
                    "value": {
                      "schedule": "Intervals on monday overlap: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "schedule intervals minimum minutes": {
                    "value": {
                      "schedule": "Intervals on monday must have at least 30 minutes between them: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "extra fields": {
                    "value": {
                      "time": "start_time and end_time are only allowed for temporary phone numbers.",
                      "schedule": "Schedule is only allowed for schedule phone type."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  },
                  "wrong primary": {
                    "value": {
                      "detail": "Wrong phone given as primary. Primary phone should be users main number."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ресурс не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  },
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Ресурс уже существует",
            "content": {
              "application/json": {
                "examples": {
                  "phone exists": {
                    "value": {
                      "detail": "Phone already exists for this user in the barrier."
                    }
                  },
                  "other primary phone exists": {
                    "value": {
                      "detail": "User already has a primary phone number in this barrier."
                    }
                  },
                  "barrier phones limit": {
                    "value": {
                      "detail": "Barrier has reached the maximum number of phone numbers."
                    }
                  },
                  "user phones limit": {
                    "value": {
                      "detail": "User has reached the limit of X phone numbers."
                    }
                  },
                  "temporary user limit": {
                    "value": {
                      "detail": "User has reached the limit of X temporary phone numbers."
                    }
                  },
                  "temporary barrier limit": {
                    "value": {
                      "detail": "Barrier has reached the global limit of X temporary phone numbers."
                    }
                  },
                  "schedule user limit": {
                    "value": {
                      "detail": "User has reached the limit of X schedule phone numbers."
                    }
                  },
                  "schedule barrier limit": {
                    "value": {
                      "detail": "Barrier has reached the global limit of X schedule phone numbers."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/barriers/{barrier_id}/phones/my/": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Получение списка номеров в шлагбауме.",
        "description": "Позволяет пользователю получить свои номера в шлагбауме.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "phone",
                "-phone",
                "name",
                "-name",
                "type",
                "-type"
              ]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Фильтр по номеру телефона (частичное совпадение)."
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Фильтр по имени номера (частичное совпадение)."
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "primary",
                "permanent",
                "temporary",
                "schedule"
              ]
            },
            "description": "Фильтр по типу номера."
          },
          {
            "name": "is_active",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Фильтр по активным и удалённым номерам (`true` - только активные, `false` - только удалённые). По умолчанию только активные. "
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы для пагинации."
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список номеров пользователя в шлагбауме.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Phone"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/phones/{phone_id}/": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Получение информации о номере телефона.",
        "description": "Позволяет пользователю получить информацию о своём номере телефона в шлагбауме.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о номере телефона.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "patch": {
        "tags": [
          "Phones"
        ],
        "summary": "Изменение номера в шлагбауме.",
        "description": "Позволяет пользователю измененить имя, тип или время действия номера (для временных номеров).\n\nИзменения в расписании выполняются с помощью запроса `/phones/{phone_id}/schedule/`",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Друг Петр"
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-08-01T10:00:00+03:00"
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-08-01T18:00:00+03:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Номер добавлен пользователю.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "start_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ],
                      "end_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "time": "Both start_time and end_time must be provided while updating temporary phones."
                    }
                  },
                  "temporary interval": {
                    "value": {
                      "time": "Interval must be at least 30 minutes long."
                    }
                  },
                  "invalid time": {
                    "value": {
                      "start_time": "start_time must be at least 30 minutes in the future.",
                      "end_time": "end_time must be after start_time."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  },
                  "not active": {
                    "value": {
                      "detail": "Cannot update a deactivated phone."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "delete": {
        "tags": [
          "Phones"
        ],
        "summary": "Удаление номера у пользователя в шлагбауме.",
        "description": "Пользователь удаляет свой номер телефона.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "responses": {
          "204": {
            "description": "Номер удален."
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  },
                  "not active": {
                    "value": {
                      "detail": "Phone is already deactivated."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/phones/{phone_id}/schedule/": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Получение расписания номера.",
        "description": "Позволяет получить текущее расписание номера телефона.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "responses": {
          "200": {
            "description": "Текущее расписание номера.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  },
                  "not schedule": {
                    "value": {
                      "detail": "Only schedule-type phones have a schedule."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "put": {
        "tags": [
          "Phones"
        ],
        "summary": "Изменение расписания номера.",
        "description": "Позволяет изменить расписание номера телефона, только для телефонов которые работают по расписанию.\n\nМеняются только те значения, которые будут переданы в запросе.\n\nЕсли передать `null`, то расписание на этот день будет удалено.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Расписание изменено.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "monday": [
                        {
                          "start_time": [
                            "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                          ],
                          "end_time": [
                            "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                          ]
                        }
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "monday": [
                        {
                          "start_time": [
                            "This field is required."
                          ],
                          "end_time": [
                            "This field is required."
                          ]
                        }
                      ]
                    }
                  },
                  "required schedule": {
                    "value": {
                      "schedule": "Schedule is required for schedule phone type."
                    }
                  },
                  "schedule interval limit": {
                    "value": {
                      "schedule": "Phone schedule exceeds allowed number of intervals (5 max)."
                    }
                  },
                  "schedule intervals overlap": {
                    "value": {
                      "schedule": "Intervals on monday overlap: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "schedule intervals minimum minutes": {
                    "value": {
                      "schedule": "Intervals on monday must have at least 30 minutes between them: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "schedule minimum interval": {
                    "value": {
                      "schedule": "Schedule must contain at least one interval."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  },
                  "not active": {
                    "value": {
                      "detail": "Cannot update a deactivated phone."
                    }
                  },
                  "not schedule": {
                    "value": {
                      "detail": "Only schedule-type phones have a schedule."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/phones/": {
      "post": {
        "tags": [
          "Phones"
        ],
        "summary": "Добавление номера пользователю в шлагбауме.",
        "description": "Администратор добавляет новый номер в шлагбаум для пользователя.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "integer",
                    "description": "`ID` пользователя, которому добавляется номер.",
                    "example": 42
                  },
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+7\\d{10}$",
                    "description": "Номер телефона в формате `+7XXXXXXXXXX`",
                    "example": "+79991234567"
                  },
                  "name": {
                    "type": "string",
                    "description": "Название номера.",
                    "example": "Гость Иван"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "permanent",
                      "temporary",
                      "schedule"
                    ],
                    "description": "Тип номера (постоянный, временный, по расписанию).",
                    "example": "temporary"
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Дата и время начала действия (только для временных номеров).",
                    "example": "2025-08-01T10:00:00+03:00"
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Дата и время окончания действия (только для временных номеров).",
                    "example": "2025-08-01T18:00:00+03:00"
                  },
                  "schedule": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Номер добавлен пользователю.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "phone": [
                        "Enter a valid phone number in the format +7XXXXXXXXXX."
                      ],
                      "start_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ],
                      "end_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ],
                      "schedule": {
                        "monday": [
                          {
                            "start_time": [
                              "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                            ],
                            "end_time": [
                              "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required fields": {
                    "value": {
                      "phone": [
                        "This field is required."
                      ],
                      "user": [
                        "This field is required."
                      ],
                      "time": "start_time and end_time are required for temporary phone.",
                      "schedule": {
                        "monday": [
                          {
                            "start_time": [
                              "This field is required."
                            ],
                            "end_time": [
                              "This field is required."
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required schedule": {
                    "value": {
                      "schedule": "Schedule is required for schedule phone type."
                    }
                  },
                  "blank fields": {
                    "value": {
                      "phone": [
                        "This field may not be blank."
                      ]
                    }
                  },
                  "null fields": {
                    "value": {
                      "user": [
                        "This field may not be null."
                      ]
                    }
                  },
                  "temporary interval": {
                    "value": {
                      "time": "Interval must be at least 30 minutes long."
                    }
                  },
                  "invalid time": {
                    "value": {
                      "start_time": "start_time must be at least 30 minutes in the future.",
                      "end_time": "end_time must be after start_time."
                    }
                  },
                  "schedule interval limit": {
                    "value": {
                      "schedule": "Phone schedule exceeds allowed number of intervals (5 max)."
                    }
                  },
                  "schedule minimum interval": {
                    "value": {
                      "schedule": "Schedule must contain at least one interval."
                    }
                  },
                  "schedule intervals overlap": {
                    "value": {
                      "schedule": "Intervals on monday overlap: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "schedule intervals minimum minutes": {
                    "value": {
                      "schedule": "Intervals on monday must have at least 30 minutes between them: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "extra fields": {
                    "value": {
                      "time": "start_time and end_time are only allowed for temporary phone numbers.",
                      "schedule": "Schedule is only allowed for schedule phone type."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  },
                  "not primary": {
                    "value": {
                      "detail": "Primary phone numbers cannot be created manually."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ресурс не найден",
            "content": {
              "application/json": {
                "examples": {
                  "barrier not found": {
                    "value": {
                      "detail": "Barrier not found."
                    }
                  },
                  "user not found": {
                    "value": {
                      "detail": "User not found."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Ресурс уже существует",
            "content": {
              "application/json": {
                "examples": {
                  "phone exists": {
                    "value": {
                      "detail": "Phone already exists for this user in the barrier."
                    }
                  },
                  "other primary phone exists": {
                    "value": {
                      "detail": "User already has a primary phone number in this barrier."
                    }
                  },
                  "barrier phones limit": {
                    "value": {
                      "detail": "Barrier has reached the maximum number of phone numbers."
                    }
                  },
                  "user phones limit": {
                    "value": {
                      "detail": "User has reached the limit of X phone numbers."
                    }
                  },
                  "temporary user limit": {
                    "value": {
                      "detail": "User has reached the limit of X temporary phone numbers."
                    }
                  },
                  "temporary barrier limit": {
                    "value": {
                      "detail": "Barrier has reached the global limit of X temporary phone numbers."
                    }
                  },
                  "schedule user limit": {
                    "value": {
                      "detail": "User has reached the limit of X schedule phone numbers."
                    }
                  },
                  "schedule barrier limit": {
                    "value": {
                      "detail": "Barrier has reached the global limit of X schedule phone numbers."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/barriers/{barrier_id}/phones/my/": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Получение списка номеров в шлагбауме.",
        "description": "Позволяет администратору получить все номера в шлагбауме, можно отфильтровать по выбранному пользователю.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "barrier_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` шлагбаума."
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "Фильтрация по `ID` пользователя"
          },
          {
            "name": "ordering",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "phone",
                "-phone",
                "name",
                "-name",
                "type",
                "-type"
              ]
            }
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Фильтр по номеру телефона (частичное совпадение)."
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Фильтр по имени номера (частичное совпадение)."
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "primary",
                "permanent",
                "temporary",
                "schedule"
              ]
            },
            "description": "Фильтр по типу номера."
          },
          {
            "name": "is_active",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Фильтр по активным и удалённым номерам (`true` - только активные, `false` - только удалённые). По умолчанию только активные. "
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            },
            "description": "Номер страницы для пагинации."
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 10
            },
            "description": "Количество элементов на странице."
          }
        ],
        "responses": {
          "200": {
            "description": "Список номеров в шлагбауме.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "example": 100
                    },
                    "current_page": {
                      "type": "integer",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "example": 10
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Phone"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Неправильный номер страницы",
            "content": {
              "application/json": {
                "examples": {
                  "wrong page number": {
                    "value": {
                      "detail": "Invalid page."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/phones/{phone_id}/": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Получение информации о номере телефона.",
        "description": "Позволяет администратору получить информацию о номере телефона любого пользователя в шлагбауме.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о номере телефона.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "patch": {
        "tags": [
          "Phones"
        ],
        "summary": "Изменение номера пользователя в шлагбауме.",
        "description": "Позволяет администратору измененить имя, тип или время действия номера (для временных номеров).\n\nИзменения в расписании выполняются с помощью запроса `/admin/phones/{phone_id}/schedule/`",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Друг Петр"
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-08-01T10:00:00+03:00"
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-08-01T18:00:00+03:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Номер добавлен пользователю.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "start_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ],
                      "end_time": [
                        "Datetime has wrong format. Use one of these formats instead: YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]."
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "time": "Both start_time and end_time must be provided while updating temporary phones."
                    }
                  },
                  "temporary interval": {
                    "value": {
                      "time": "Interval must be at least 30 minutes long."
                    }
                  },
                  "invalid time": {
                    "value": {
                      "start_time": "start_time must be at least 30 minutes in the future.",
                      "end_time": "end_time must be after start_time."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  },
                  "not active": {
                    "value": {
                      "detail": "Cannot update a deactivated phone."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "delete": {
        "tags": [
          "Phones"
        ],
        "summary": "Удаление номера у пользователя в шлагбауме.",
        "description": "Администратор удаляет номер телефона другого пользователя из шлагбаума.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "responses": {
          "204": {
            "description": "Номер удален."
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this barrier."
                    }
                  },
                  "not active": {
                    "value": {
                      "detail": "Phone is already deactivated."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    },
    "/admin/phones/{phone_id}/schedule/": {
      "get": {
        "tags": [
          "Phones"
        ],
        "summary": "Получение расписания номера.",
        "description": "Позволяет администратору получить текущее расписание номера телефона.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "responses": {
          "200": {
            "description": "Текущее расписание номера.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  },
                  "not schedule": {
                    "value": {
                      "detail": "Only schedule-type phones have a schedule."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      },
      "put": {
        "tags": [
          "Phones"
        ],
        "summary": "Изменение расписания номера.",
        "description": "Позволяет администратору изменить расписание номера телефона, только для телефонов которые работают по расписанию.\n\nМеняются только те значения, которые будут переданы в запросе.\n\nЕсли передать `null`, то расписание на этот день будет удалено.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "phone_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            },
            "description": "`ID` номера телефона."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schedule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Расписание изменено.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные параметры запроса.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid format": {
                    "value": {
                      "monday": [
                        {
                          "start_time": [
                            "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                          ],
                          "end_time": [
                            "Time has wrong format. Use one of these formats instead: hh:mm[:ss[.uuuuuu]]."
                          ]
                        }
                      ]
                    }
                  },
                  "required fields": {
                    "value": {
                      "monday": [
                        {
                          "start_time": [
                            "This field is required."
                          ],
                          "end_time": [
                            "This field is required."
                          ]
                        }
                      ]
                    }
                  },
                  "required schedule": {
                    "value": {
                      "schedule": "Schedule is required for schedule phone type."
                    }
                  },
                  "schedule interval limit": {
                    "value": {
                      "schedule": "Phone schedule exceeds allowed number of intervals (5 max)."
                    }
                  },
                  "schedule intervals overlap": {
                    "value": {
                      "schedule": "Intervals on monday overlap: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "schedule intervals minimum minutes": {
                    "value": {
                      "schedule": "Intervals on monday must have at least 30 minutes between them: '09:00:00-10:00:00 and 09:30:00-11:00:00'"
                    }
                  },
                  "schedule minimum interval": {
                    "value": {
                      "schedule": "Schedule must contain at least one interval."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Пользователь не авторизован.",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  },
                  "invalid token": {
                    "value": {
                      "detail": "Given token not valid for any token type",
                      "code": "token_not_valid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "examples": {
                  "blocked": {
                    "value": {
                      "detail": "User is blocked. Reason: 'Spam'."
                    }
                  },
                  "not admin": {
                    "value": {
                      "detail": "You do not have permission to perform this action."
                    }
                  },
                  "without access": {
                    "value": {
                      "detail": "You do not have access to this phone."
                    }
                  },
                  "not active": {
                    "value": {
                      "detail": "Cannot update a deactivated phone."
                    }
                  },
                  "not schedule": {
                    "value": {
                      "detail": "Only schedule-type phones have a schedule."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Телефон не найден",
            "content": {
              "application/json": {
                "examples": {
                  "phone not found": {
                    "value": {
                      "detail": "Phone not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера. Попробуйте позже."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор пользователя.",
            "example": 42
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+7\\d{10}$",
            "description": "Номер телефона пользователя в формате `+7XXXXXXXXXX`.",
            "example": "+79991234567"
          },
          "full_name": {
            "type": "string",
            "description": "Полное имя пользователя.",
            "example": "Иванов Иван"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ],
            "description": "Роль пользователя в системе.",
            "example": "admin",
            "default": "user"
          },
          "is_active": {
            "type": "boolean",
            "description": "Флаг, указывающий, заблокирован ли пользователь. `is_active` = False если заблокирован.",
            "default": false
          },
          "phone_privacy": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "protected"
            ],
            "description": "Privacy-настройки номера: `public` — виден всем, `protected` — только для пользователей своих шлагбаумов, `private` — скрыт для всех.",
            "example": "public",
            "default": "private"
          }
        },
        "xml": {
          "name": "user",
          "wrapped": true
        }
      },
      "BarrierView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "address": {
            "type": "string",
            "example": "Манежная площадь, 1, Москва"
          },
          "owner": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 42
              },
              "full_name": {
                "type": "string",
                "example": "Ivanov Ivan"
              },
              "phone": {
                "type": "string",
                "example": "+79991234567"
              }
            }
          },
          "device_phone": {
            "type": "string",
            "example": "+79991234567"
          },
          "additional_info": {
            "type": "string",
            "example": "Время работы администратора: По будням с 10 до 18."
          },
          "is_public": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "AdminBarrierView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "address": {
            "type": "string",
            "example": "Манежная площадь, 1, Москва"
          },
          "owner": {
            "type": "integer",
            "example": 42
          },
          "device_phone": {
            "type": "string",
            "example": "+79991234567"
          },
          "device_model": {
            "type": "string",
            "enum": [
              "RTU5025",
              "RTU5035",
              "Telemetrica",
              "Elfoc"
            ],
            "example": "RTU5025"
          },
          "device_phones_amount": {
            "type": "integer",
            "example": 999
          },
          "additional_info": {
            "type": "string",
            "example": "Время работы администратора: По будням с 10 до 18."
          },
          "is_public": {
            "type": "boolean",
            "default": true
          },
          "is_active": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "BarrierLimitRequest": {
        "type": "object",
        "description": "Лимиты шлагбаума.",
        "properties": {
          "user_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Максимальное количество номеров на пользователя.",
            "example": 10
          },
          "user_temp_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Максимальное количество временных номеров на пользователя.",
            "example": 5
          },
          "global_temp_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "user_schedule_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "global_schedule_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "schedule_interval_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "sms_weekly_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Ограничение на количество SMS в неделю.",
            "example": 50
          }
        }
      },
      "BarrierLimitResponse": {
        "properties": {
          "barrier": {
            "type": "integer",
            "description": "`ID` шлагбаума.",
            "example": 42
          },
          "user_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Максимальное количество номеров на пользователя.",
            "example": 10
          },
          "user_temp_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Максимальное количество временных номеров на пользователя.",
            "example": 5
          },
          "global_temp_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "user_schedule_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "global_schedule_phone_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "schedule_interval_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Общее количество временных номеров.",
            "example": 20
          },
          "sms_weekly_limit": {
            "type": "integer",
            "nullable": true,
            "description": "Ограничение на количество SMS в неделю.",
            "example": 50
          }
        }
      },
      "AccessRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "user": {
            "type": "integer",
            "example": 42
          },
          "barrier": {
            "type": "integer",
            "example": 42
          },
          "request_type": {
            "type": "string",
            "enum": [
              "from_user",
              "from_barrier"
            ],
            "example": "from_user"
          },
          "type": {
            "type": "string",
            "enum": [
              "incoming",
              "outgoing"
            ],
            "example": "incoming"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "accepted",
              "rejected",
              "cancelled"
            ],
            "example": "pending",
            "default": "pending"
          },
          "hidden_for_user": {
            "type": "boolean",
            "default": false,
            "example": false
          },
          "hidden_for_admin": {
            "type": "boolean",
            "default": false,
            "example": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-01T10:00:00+03:00"
          },
          "finished_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-01T10:00:00+03:00"
          }
        }
      },
      "Phone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "user": {
            "type": "integer",
            "example": 42
          },
          "barrier": {
            "type": "integer",
            "example": 42
          },
          "phone": {
            "type": "string",
            "format": "phone",
            "example": "+79991234567"
          },
          "name": {
            "type": "string",
            "example": "Guest: Ivanov Ivan"
          },
          "type": {
            "type": "string",
            "enum": [
              "permanent",
              "temporary",
              "schedule"
            ],
            "example": "temporary"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-08-01T10:00:00+03:00"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2025-08-01T18:00:00+03:00"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "Schedule": {
        "type": "object",
        "description": "Расписание работы номера.",
        "properties": {
          "monday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleInterval"
            }
          },
          "tuesday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleInterval"
            }
          },
          "wednesday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleInterval"
            }
          },
          "thursday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleInterval"
            }
          },
          "friday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleInterval"
            }
          },
          "saturday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleInterval"
            }
          },
          "sunday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleInterval"
            }
          }
        }
      },
      "ScheduleInterval": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "string",
            "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$",
            "description": "Время начала в формате HH:MM.",
            "example": "08:00"
          },
          "end_time": {
            "type": "string",
            "pattern": "^([01]\\d|2[0-3]):[0-5]\\d$",
            "description": "Время окончания в формате HH:MM.",
            "example": "12:00"
          }
        }
      },
      "BarrierActionLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "phone": {
            "type": "string",
            "format": "phone",
            "example": "+79991234567"
          },
          "barrier": {
            "type": "integer",
            "example": 42
          },
          "author": {
            "type": "string",
            "enum": [
              "user",
              "admin",
              "system"
            ]
          },
          "action_type": {
            "type": "string",
            "enum": [
              "add_phone",
              "delete_phone",
              "update_phone",
              "barrier_setting"
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "manual",
              "barrier_exit",
              "access_granted",
              "primary_phone_change",
              "schedule_update",
              "end_time",
              "barrier_deleted",
              "user_deleted"
            ]
          },
          "old_value": {
            "type": "string",
            "nullable": true,
            "description": "Previous value/state (as string or JSON)"
          },
          "new_value": {
            "type": "string",
            "nullable": true,
            "description": "New value/state (as string or JSON)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-01T10:00:00+03:00"
          }
        }
      },
      "SmsMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "message_type": {
            "type": "string",
            "enum": [
              "verification",
              "phone_command",
              "barrier_setting",
              "balance_check"
            ]
          },
          "phone_command_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "open",
              "close"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "sent",
              "success",
              "failed"
            ]
          },
          "response_content": {
            "type": "string"
          },
          "failure_reason": {
            "type": "string",
            "nullable": true
          },
          "sent_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-01T10:00:00+03:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-01T10:00:00+03:00"
          },
          "log": {
            "type": "integer",
            "nullable": true,
            "example": 42
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}