services:
  backend:
    build:
      context: ./backend
      target: development
    container_name: django_backend
    working_dir: /backend_app
    ports:
      - "8000:8000"
    env_file:
      - backend/.env
    environment:
      - DJANGO_ENV=development
      - DJANGO_LOGLEVEL=debug
      - DATABASE_ENGINE=postgresql
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - TZ=Europe/Moscow
    volumes:
      - ./backend:/backend_app
      - ./backend/logs:/backend_app/logs
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1" ]
      interval: 5s
      timeout: 2s
      retries: 5

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - backend/.env
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - TZ=Europe/Moscow
      - PGTZ=Europe/Moscow
    command: >
      postgres
      -c log_timezone=Europe/Moscow
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 2s
      retries: 5

  frontend:
    build:
      context: ./frontend
      target: development
    container_name: react_frontend
    working_dir: /frontend_app
    ports:
      - "5173:5173"
    env_file:
      - frontend/.env
    environment:
      - NODE_ENV=development
      - TZ=Europe/Moscow
    depends_on:
      - backend
    volumes:
      - ./frontend:/frontend_app
      - /frontend_app/node_modules
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5173/ || exit 1" ]
      interval: 5s
      timeout: 2s
      retries: 5

volumes:
  postgres_data_dev: