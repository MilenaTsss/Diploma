# Generated by Django 4.2.20 on 2025-03-13 14:20

import django.utils.timezone
from django.db import migrations, models

import core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "phone",
                    models.CharField(
                        error_messages={"unique": "A user with this phone number already exists."},
                        help_text="Enter a phone number in the format +7XXXXXXXXXX.",
                        max_length=20,
                        unique=True,
                        validators=[core.validators.PhoneNumberValidator()],
                    ),
                ),
                ("full_name", models.CharField(blank=True, default="", max_length=255)),
                ("password", models.CharField(blank=True, default="", max_length=255)),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Admin"), ("user", "User"), ("superuser", "Superuser")],
                        default="user",
                        max_length=20,
                    ),
                ),
                (
                    "phone_privacy",
                    models.CharField(
                        choices=[("public", "Public"), ("private", "Private"), ("protected", "Protected")],
                        default="private",
                        max_length=20,
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False, help_text="Designates whether the user can log into this admin site."
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False, help_text="Designates whether the user can manage all aspects of the system."
                    ),
                ),
                (
                    "is_blocked",
                    models.BooleanField(
                        default=False,
                        help_text="If the user is blocked, they will be restricted from performing certain actions, but their account remains active.",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
            },
        ),
    ]
