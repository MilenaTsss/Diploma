name: Docker Compose CI/CD

on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches: [ "main" ]

jobs:
  build-and-run-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            
            cd /home/${{ secrets.SSH_USER }}
            
            if [ -d Diploma/.git ]; then
              echo "Repo already exists. Pulling latest changes..."
              cd Diploma/
              git pull origin main
            else
              echo "Cloning fresh repo..."
              git clone git@github.com:${{ github.repository }}.git Diploma
              cd Diploma/
            fi
            cd src/
            
            echo "Writing environment files..."
            echo "${{ secrets.ENV_FILE_PROD_BACK }}" > backend/prod.env
            echo "${{ secrets.ENV_FILE_PROD_FRONT }}" > frontend/prod.env
            echo "${{ secrets.ENV_FILE_KAFKA }}" > kafka/kafka.env
            echo "${{ secrets.ENV_FILE_KAFKA_UI }}" > kafka/kafka-ui.env
            
            echo "Setting up certs..."
            mkdir -p certs
            echo "${{ secrets.SSL_CERT }}" > certs/server.crt
            echo "${{ secrets.SSL_KEY }}" > certs/server.key
            
            echo "Pulling dependencies & rebuilding containers..."
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d --build

            echo "Deployment complete!"
